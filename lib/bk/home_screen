import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:get/get_connect/sockets/src/socket_notifier.dart';
import 'package:wether_app_10_10_22/controller/home_ctrl.dart';
import 'package:wether_app_10_10_22/controller/srch_ctrl.dart';
import 'package:wether_app_10_10_22/models/weather_data.dart';
import 'package:wether_app_10_10_22/utils/constants.dart';
import 'package:wether_app_10_10_22/utils/responsive_size.dart';
import 'package:wether_app_10_10_22/views/search_screen.dart';
import 'package:wether_app_10_10_22/widgets/daily_forecast_weather.dart';
import 'package:wether_app_10_10_22/widgets/hourly_forecast_weather.dart';
import 'package:wether_app_10_10_22/widgets/weather_city_widget.dart';

class HomeScreen extends GetView<HomeController> {
  final homeCtrl = Get.put<HomeController>(HomeController());

  //final srchCtrl = Get.put<SearchController>(SearchController());
  final WeatherData? weatherData;

  HomeScreen({Key? key, this.weatherData}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final height = MediaQuery.of(context).size.height;

    final blockSize = height / 100;
    final blockSizeVertical = height / 100;
    double elementWidth = blockSize * 10.0;
    double fontSize = blockSize;
    return Scaffold(
      drawer: Drawer(
        child: SafeArea(
          child: Container(
            color: const Color(0xFFC2BBCD),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Padding(
                  padding: EdgeInsets.only(top: 15.0, left: 15.0),
                  child: Text(
                    'Weather',
                    style: TextStyle(
                      fontSize: 30.0,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
                Padding(
                  padding: EdgeInsets.only(top: 10.0, left: 25.0),
                  child: TextButton(
                    onPressed: () async {
                      navigator?.pop(context);
                      var city = await Get.to(SearchScreen());
                      if (city != null) {
                        //var weatherUpdate = city;
                        homeCtrl.weatherData.value = await city;
                        print('Weather Data receive is $city ');
                      } else {
                        print('not Data receive');
                      }
                    },
                    child: Text(
                      'Search',
                      style: TextStyle(
                        fontSize: 25.0,
                        fontWeight: FontWeight.bold,
                        color: Color(0xFF006092),
                      ),
                    ),
                  ),
                ),
                Padding(
                  padding: EdgeInsets.only(left: 25.0),
                  child: TextButton(
                    onPressed: () {},
                    child: Text(
                      'Notification',
                      style: TextStyle(
                        fontSize: 25.0,
                        fontWeight: FontWeight.bold,
                        color: Color(0xFF006092),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
      body: SafeArea(
        child: Container(
          height: double.infinity,
          decoration: BoxDecoration(
            gradient: SweepGradient(
              center: Alignment.bottomRight,
              colors: [
                Color(0xFFF3F2F3),
                Color(0xFF8BD3E1),
                Color(0xFF005AA7),
              ], /*begin: Alignment.topLeft,end: Alignment.bottomCenter*/
            ),
          ),
          child: Obx(
            () => homeCtrl.isLoading == true
                ? const Center(
                    child: CircularProgressIndicator(
                    color: Colors.yellowAccent,
                  ))
                : ListView(
                    shrinkWrap: true,
                    //physics: BouncingScrollPhysics(),
                    children: [
                      Container(
                        width: double.infinity,
                        height: blockSize * 6.0,
                       decoration: BoxDecoration(
                         gradient: LinearGradient(colors: [
                           Color(0xFFC9D8E5),
                           Color(0xFF95B3CA),
                         ],
                         )
                       ),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            IconButton(
                              onPressed: () {},
                              icon: Icon(
                                Icons.settings,
                                size: fontSize * 4,
                              ),
                              color: Color(0xFFC9D8E5),
                            ),
                            IconButton(
                              onPressed: () {},
                              icon: Icon(
                                Icons.search_rounded,
                                size: fontSize * 4,
                              ),
                              color: Color(0xFFC9D8E5),
                            ),
                          ],
                        ),
                      ),
                      WeatherCity(
                        header: homeCtrl.getWeatherData().weatherHeader(),
                        weatherDataCurrent:
                            homeCtrl.getWeatherData().weatherDataCurrent(),
                      ),
                      Padding(
                        padding: EdgeInsets.only(top: blockSize * 2),
                        child: Align(
                          alignment: Alignment.topLeft,
                          child: Text(
                            'Today',
                            style: TextStyle(
                              fontSize: 25.0,
                              fontWeight: FontWeight.bold,
                              color: Color(0xFFFFFFFF),
                            ),
                          ),
                        ),
                      ),
                      Container(
                        margin: EdgeInsets.all(10.0),
                        decoration: BoxDecoration(
                          color: Color(0xFF006092),
                          borderRadius: BorderRadius.all(Radius.circular(20.0)),
                        ),
                        height: 130,
                        child: HourlyForecastWeather(
                          weatherDataHourly:
                              homeCtrl.getWeatherData().weatherDataHourly(),
                          header: homeCtrl.getWeatherData().weatherHeader(),
                        ),
                      ),
                      const Padding(
                        padding: EdgeInsets.only(
                          left: 12.0,
                          top: 15.0,
                        ),
                        child: Align(
                          alignment: Alignment.topLeft,
                          child: Text(
                            'Next 7 Days',
                            style: TextStyle(
                              fontSize: 25.0,
                              fontWeight: FontWeight.bold,
                              color: Color(0xFFFFFFFF),
                            ),
                          ),
                        ),
                      ),
                      Container(
                        margin: EdgeInsets.all(10.0),
                        decoration: BoxDecoration(
                          color: Color(0xFF006092),
                          borderRadius: BorderRadius.all(Radius.circular(20.0)),
                        ),
                        height: 250,
                        child: DailyForecast7Days(
                          weatherDataDaily:
                              homeCtrl.getWeatherData().weatherDataDaily(),
                        ),
                      ),
                    ],
                  ),
          ),
        ),
      ),
    );
  }
}







another style :


import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:get/get_connect/sockets/src/socket_notifier.dart';
import 'package:wether_app_10_10_22/controller/home_ctrl.dart';
import 'package:wether_app_10_10_22/controller/srch_ctrl.dart';
import 'package:wether_app_10_10_22/models/weather_data.dart';
import 'package:wether_app_10_10_22/utils/constants.dart';
import 'package:wether_app_10_10_22/utils/responsive_size.dart';
import 'package:wether_app_10_10_22/views/search_screen.dart';
import 'package:wether_app_10_10_22/widgets/daily_forecast_weather.dart';
import 'package:wether_app_10_10_22/widgets/hourly_forecast_weather.dart';
import 'package:wether_app_10_10_22/widgets/weather_city_widget.dart';

class HomeScreen extends GetView<HomeController> {
  final homeCtrl = Get.put<HomeController>(HomeController());

  //final srchCtrl = Get.put<SearchController>(SearchController());
  final WeatherData? weatherData;

  HomeScreen({Key? key, this.weatherData}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final height = MediaQuery.of(context).size.height;

    final blockSize = height / 100;
    final blockSizeVertical = height / 100;
    double elementWidth = blockSize * 10.0;
    double fontSize = blockSize;
    return Scaffold(
      body: SafeArea(
        child: Container(
          height: double.infinity,
          decoration: BoxDecoration(
            gradient: SweepGradient(
              center: Alignment.bottomRight,
              colors: [
                Color(0xFFF3F2F3),
                Color(0xFF8BD3E1),
                Color(0xFF005AA7),
              ], /*begin: Alignment.topLeft,end: Alignment.bottomCenter*/
            ),
          ),
          child: Obx(
            () => homeCtrl.isLoading == true
                ? const Center(
                    child: CircularProgressIndicator(
                    color: Colors.yellowAccent,
                  ))
                : ListView(
                    shrinkWrap: true,
                    //physics: BouncingScrollPhysics(),
                    children: [
                      Container(
                          width: double.infinity,
                          height: blockSize * 35.0,
                          decoration: BoxDecoration(
                              gradient: LinearGradient(
                                colors: [
                                  Color(0xFF74BDE0),
                                  Color(0xFF95B3CA),
                                ],
                              ),
                              borderRadius: BorderRadius.only(
                                bottomRight: Radius.circular(100.0),
                              ),
                              boxShadow: [
                                BoxShadow(
                                  color: Color(0xFF3B8AC3).withOpacity(0.5),
                                  spreadRadius: 2,
                                  blurRadius: 7,
                                  offset: Offset(0, 10),
                                  blurStyle: BlurStyle.values[1],
                                ),
                                BoxShadow(
                                  color: Color(0xFFF4D096),
                                  //color: Color(0xFF74BDE0).withOpacity(0.5),
                                  spreadRadius: 0.2,
                                  blurRadius: 5,
                                  offset: Offset(0, 5),
                                  blurStyle: BlurStyle.values[1],
                                )
                              ]),
                          child: Column(
                            children: [
                              Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceBetween,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  IconButton(
                                    onPressed: () async {
                                      navigator?.pop(context);
                                      var city = await Get.to(SearchScreen());
                                      if (city != null) {
                                        //var weatherUpdate = city;
                                        homeCtrl.weatherData.value = await city;
                                        print('Weather Data receive is $city ');
                                      } else {
                                        print('not Data receive');
                                      }
                                    },
                                    icon: Icon(
                                      Icons.settings,
                                      size: fontSize * 4,
                                    ),
                                    color: Color(0xFFF4D096),
                                  ),
                                  IconButton(
                                    onPressed: () {},
                                    icon: Icon(
                                      Icons.search_rounded,
                                      size: fontSize * 4,
                                    ),
                                    color: Color(0xFFF4D096),
                                  ),
                                ],
                              ),
                              WeatherCity(
                                header:
                                    homeCtrl.getWeatherData().weatherHeader(),
                                weatherDataCurrent: homeCtrl
                                    .getWeatherData()
                                    .weatherDataCurrent(),
                              ),
                            ],
                          )),
                      Padding(
                        padding: EdgeInsets.only(top: blockSize * 2,left: blockSize * 1 ),
                        child: Align(
                          alignment: Alignment.topLeft,
                          child: Text(
                            'Today',
                            style: TextStyle(
                              fontSize: 25.0,
                              fontWeight: FontWeight.bold,
                              color: Color(0xFFF4D096),
                            ),
                          ),
                        ),
                      ),
                      Container(
                        margin: EdgeInsets.all(10.0),
                        decoration: BoxDecoration(
                          //color: Color(0xFF006092),
                          gradient: LinearGradient(colors: [
                            Color(0xFF74BDE0),
                            Color(0xFF95B3CA),
                          ]),
                          borderRadius: BorderRadius.all(Radius.circular(20.0)),
                        ),
                        height: 130,
                        child: HourlyForecastWeather(
                          weatherDataHourly:
                              homeCtrl.getWeatherData().weatherDataHourly(),
                          header: homeCtrl.getWeatherData().weatherHeader(),
                        ),
                      ),
                      const Padding(
                        padding: EdgeInsets.only(
                          left: 12.0,
                          top: 15.0,
                        ),
                        child: Align(
                          alignment: Alignment.topLeft,
                          child: Text(
                            'Next 7 Days',
                            style: TextStyle(
                              fontSize: 25.0,
                              fontWeight: FontWeight.bold,
                              color: Color(0xFFF4D096),
                            ),
                          ),
                        ),
                      ),
                      Container(
                        margin: EdgeInsets.all(10.0),
                        decoration: BoxDecoration(
                          //color: Color(0xFF006092),
                          gradient: LinearGradient(colors: [
                            Color(0xFF74BDE0),
                            Color(0xFF95B3CA),
                          ]),
                          borderRadius: BorderRadius.all(Radius.circular(20.0)),
                        ),
                        height: 250,
                        child: DailyForecast7Days(
                          weatherDataDaily:
                              homeCtrl.getWeatherData().weatherDataDaily(),
                        ),
                      ),
                    ],
                  ),
          ),
        ),
      ),
    );
  }
}

