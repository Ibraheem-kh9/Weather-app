import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:lottie/lottie.dart';
import 'package:wether_app_10_10_22/constants/images.dart';
import 'package:wether_app_10_10_22/controller/home_ctrl.dart';
import 'package:wether_app_10_10_22/models/weather/weather.dart';
import 'package:wether_app_10_10_22/models/weather_data_current.dart';
import 'package:wether_app_10_10_22/utils/responsive_size.dart';
import 'package:wether_app_10_10_22/views/search_screen.dart';

class WeatherCity extends GetView<HomeController> {
  //WeatherDataHeader? weatherHeader;
  final homeCtrl = Get.put<HomeController>(HomeController());
  final WeatherDataCurrent? weatherDataCurrent;
  final Weather? header;

  WeatherCity({
    Key? key,
    required this.header,
    required this.weatherDataCurrent,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final height = MediaQuery.of(context).size.height;
    final blockSize = width / 100;
    final blockSizeVertical = height / 100;
    //final blockSizeHorizontal = width / 100;
    //double elementWidth = blockSize * 10.0;
    double fontSize = blockSize;
    SizeConfig().init(context);
    return Container(
      //margin: EdgeInsets.only(bottom: elementWidth * 5),
      decoration: BoxDecoration(
          gradient: LinearGradient(
            colors: [
              Color(0xFF74BDE0),
              Color(0xFF95B3CA),
            ],
          ),
          borderRadius: BorderRadius.only(
            bottomRight: Radius.circular(100.0),
          ),
          boxShadow: [
            BoxShadow(
              color: Color(0xFF3B8AC3).withOpacity(0.5),
              spreadRadius: 2,
              blurRadius: 7,
              offset: Offset(0, 10),
              blurStyle: BlurStyle.values[1],
            ),
            BoxShadow(
              color: Color(0xFFF4D096),
              //color: Color(0xFF74BDE0).withOpacity(0.5),
              spreadRadius: 0.2,
              blurRadius: 5,
              offset: Offset(0, 5),
              blurStyle: BlurStyle.values[1],
            )
          ]),
      width: double.infinity,
      height: blockSize * 60,
      child: ListView(
        physics: const NeverScrollableScrollPhysics(),
        shrinkWrap: true,
        //mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          Row(
            mainAxisAlignment:
            MainAxisAlignment.spaceBetween,
            //crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              IconButton(
                onPressed: (){},
                icon: Icon(
                  Icons.settings,
                  size: fontSize * 8,
                ),
                color: Color(0xFFF4D096),
              ),
              IconButton(
                onPressed: () async {
                  navigator?.pop(context);
                  var city = await Get.to(SearchScreen());
                  if (city != null) {
                    //var weatherUpdate = city;
                    homeCtrl.weatherData.value = await city;
                    print('Weather Data receive is $city ');
                  } else {
                    print('not Data receive');
                  }
                },
                icon: Icon(
                  Icons.search_rounded,
                  size: fontSize * 8,
                ),
                color: Color(0xFFF4D096),
              ),
            ],
          ),
          Align(
            alignment: Alignment.topCenter,
            child: Column(
              children: [
                Text(
                  header!.timezone!
                      .split('/')
                      .removeAt(1)
                      .replaceAll('_', ' '),
                  style: TextStyle(
                    fontSize: fontSize * 10.0,
                    fontWeight: FontWeight.bold,
                    color: Colors.white,
                  ),
                ),
                SizedBox(
                  height: blockSizeVertical * 1.2,
                ),
                Text(
                  controller.date,
                  style: TextStyle(
                    fontSize: blockSize * 4.0,
                    color: Colors.grey[300],
                  ),
                ),
                // Image.asset(
                //     "assets/weather_icon/day/${weatherDataCurrent!.current!.subWeather![0].id}.png",
                // scale: 0.5,)
                //LottieBuilder.asset(Images.rain,width: 150.0,),
                Image.asset(
                  "assets/weather/${weatherDataCurrent!.current!.subWeather![0].icon}.png",
                  width: fontSize * 15.0,

                ),
              ],
            ),
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              Text(
                '${weatherDataCurrent!.current!.temp?.truncate()}Â°',
                style: TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: fontSize * 12.0,
                  color: Colors.white,
                ),
              ),
              Text(
                '${weatherDataCurrent!.current!.subWeather![0].description}',
                style: TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: fontSize * 5.0,
                  color: Colors.white,
                ),
              )
            ],
          ),
        ],
      ),
    );
  }
}
